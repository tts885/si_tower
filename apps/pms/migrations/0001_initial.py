# Generated by Django 3.2.13 on 2022-06-01 13:35

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('commons', '0002_auto_20220601_2235'),
    ]

    operations = [
        migrations.CreateModel(
            name='Issue',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='', max_length=100, verbose_name='題名')),
                ('Priority', models.CharField(choices=[('1', 'Low'), ('2', 'High'), ('3', 'Normal')], default='', max_length=10, verbose_name='優先度')),
                ('version', models.CharField(blank=True, default='', max_length=100, null=True, verbose_name='対象バージョン')),
                ('planStartDate', models.DateField(blank=True, null=True, verbose_name='予定開始日')),
                ('planEndDate', models.DateField(blank=True, null=True, verbose_name='予定終了日')),
                ('actualStartDate', models.DateField(blank=True, null=True, verbose_name='実績開始日')),
                ('actualEndDate', models.DateField(blank=True, null=True, verbose_name='実績終了日')),
                ('estimate', models.FloatField(blank=True, default=0, null=True, verbose_name='予定工数')),
                ('remainingWorkTime', models.FloatField(blank=True, default=0, null=True, verbose_name='残作業時間(h)')),
                ('createDate', models.DateField(blank=True, null=True, verbose_name='起票日')),
                ('contents', models.TextField(blank=True, null=True, verbose_name='内容')),
                ('shareToPM', models.BooleanField(verbose_name='マネジメント共有')),
                ('shareToClient', models.BooleanField(verbose_name='クライアント共有')),
                ('clientConsideration', models.BooleanField(verbose_name='クライアント検討')),
                ('dueDate', models.DateField(blank=True, null=True, verbose_name='対応期限')),
                ('completionCriteria', models.TextField(blank=True, null=True, verbose_name='完了基準')),
                ('ownerClient', models.CharField(blank=True, default='', max_length=100, null=True, verbose_name='担当クライアント')),
                ('solution', models.TextField(blank=True, null=True, verbose_name='対応方針／状況')),
                ('delayDescription', models.TextField(blank=True, null=True, verbose_name='遅延理由詳細')),
                ('creater', models.ForeignKey(blank=True, default='', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='creater', to=settings.AUTH_USER_MODEL, verbose_name='起票者')),
                ('delayReason', models.ForeignKey(blank=True, default='', null=True, on_delete=django.db.models.deletion.PROTECT, to='commons.delayreason', verbose_name='遅延理由区分')),
                ('impactPhase', models.ForeignKey(blank=True, default='', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='impactPhase', to='commons.phase', verbose_name='影響工程')),
                ('impactScope', models.ForeignKey(blank=True, default='', null=True, on_delete=django.db.models.deletion.PROTECT, to='commons.impactscope', verbose_name='影響範囲')),
                ('occurredPhase', models.ForeignKey(blank=True, default='', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='occurredPhase', to='commons.phase', verbose_name='発生工程（課題・リスク）')),
                ('owner', models.ForeignKey(blank=True, default='', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='issue_owner', to=settings.AUTH_USER_MODEL, verbose_name='担当者')),
                ('reviewOwner', models.ForeignKey(blank=True, default='', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='reviewOwner', to=settings.AUTH_USER_MODEL, verbose_name='レビュー担当者')),
                ('riskIssueCategory', models.ForeignKey(blank=True, default='', null=True, on_delete=django.db.models.deletion.PROTECT, to='commons.riskissuecategory', verbose_name='分類（課題・リスク）')),
                ('solvePhase_Plan', models.ForeignKey(blank=True, default='', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='solvePhase_Plan', to='commons.phase', verbose_name='解決予定工程（課題・リスク）')),
                ('status', models.ForeignKey(blank=True, default='', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='issue_status', to='commons.status', verbose_name='ステータス')),
                ('subTeam', models.ForeignKey(blank=True, default='', null=True, on_delete=django.db.models.deletion.PROTECT, to='commons.subteam', verbose_name='サブチーム')),
                ('team', models.ForeignKey(blank=True, default='', null=True, on_delete=django.db.models.deletion.PROTECT, to='commons.team', verbose_name='チーム')),
            ],
            options={
                'verbose_name': 'Issue',
                'verbose_name_plural': 'Issue',
            },
        ),
        migrations.CreateModel(
            name='Work',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='', max_length=100, verbose_name='題名')),
                ('description', models.TextField(blank=True, null=True, verbose_name='説明')),
                ('Priority', models.CharField(choices=[('1', 'Low'), ('2', 'High'), ('3', 'Normal')], default='', max_length=10, verbose_name='優先度')),
                ('version', models.CharField(default='', max_length=100, verbose_name='対象バージョン')),
                ('parentTracker', models.CharField(default='', max_length=100, verbose_name='親チケット')),
                ('planStartDate', models.DateField(blank=True, null=True, verbose_name='予定開始日')),
                ('planEndDate', models.DateField(blank=True, null=True, verbose_name='予定終了日')),
                ('actualStartDate', models.DateField(blank=True, null=True, verbose_name='実績開始日')),
                ('actualEndDate', models.DateField(blank=True, null=True, verbose_name='実績終了日')),
                ('estimate', models.FloatField(blank=True, default=0, null=True, verbose_name='予定工数')),
                ('remainingWorkTime', models.FloatField(blank=True, default=0, null=True, verbose_name='残作業時間(h)')),
                ('acceptanceCriteria', models.TextField(blank=True, null=True, verbose_name='受け入れ基準')),
                ('delayDescription', models.TextField(blank=True, null=True, verbose_name='遅延理由詳細')),
                ('delayReason', models.ForeignKey(blank=True, default='', null=True, on_delete=django.db.models.deletion.PROTECT, to='commons.delayreason', verbose_name='遅延理由区分')),
                ('issue', models.ManyToManyField(blank=True, default='', to='pms.Issue')),
                ('owner', models.ForeignKey(blank=True, default='', null=True, on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL, verbose_name='担当者')),
                ('reviewAssign', models.ForeignKey(blank=True, default='', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='reviewAssign', to=settings.AUTH_USER_MODEL, verbose_name='レビュー担当者')),
                ('status', models.ForeignKey(blank=True, default='', null=True, on_delete=django.db.models.deletion.PROTECT, to='commons.status', verbose_name='ステータス')),
                ('subTeam', models.ForeignKey(blank=True, default='', null=True, on_delete=django.db.models.deletion.PROTECT, to='commons.subteam', verbose_name='サブチーム')),
                ('team', models.ForeignKey(blank=True, default='', null=True, on_delete=django.db.models.deletion.PROTECT, to='commons.team', verbose_name='チーム')),
                ('workSite', models.ForeignKey(blank=True, default='', null=True, on_delete=django.db.models.deletion.PROTECT, to='commons.worksite', verbose_name='WorkSite')),
                ('workType', models.ForeignKey(blank=True, default='', null=True, on_delete=django.db.models.deletion.PROTECT, to='commons.worktype', verbose_name='作業種別')),
            ],
            options={
                'verbose_name': 'Work',
                'verbose_name_plural': 'Work',
            },
        ),
        migrations.CreateModel(
            name='Scenario',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='', max_length=100, verbose_name='題名')),
                ('description', models.TextField(blank=True, null=True, verbose_name='説明')),
                ('version', models.CharField(blank=True, default='', max_length=100, null=True, verbose_name='対象バージョン')),
                ('parentTracker', models.CharField(blank=True, default='', max_length=100, null=True, verbose_name='親チケット')),
                ('planStartDate', models.DateField(blank=True, null=True, verbose_name='予定開始日')),
                ('planEndDate', models.DateField(blank=True, null=True, verbose_name='予定終了日')),
                ('actualStartDate', models.DateField(blank=True, null=True, verbose_name='実績開始日')),
                ('actualEndDate', models.DateField(blank=True, null=True, verbose_name='実績終了日')),
                ('estimate', models.FloatField(blank=True, default=0, null=True, verbose_name='予定工数')),
                ('deliverablesId', models.CharField(blank=True, default='', max_length=100, null=True, verbose_name='成果物ID')),
                ('totalTestItems', models.CharField(default=0, max_length=12, verbose_name='テスト項目総数')),
                ('completedTestItems', models.CharField(default=0, max_length=12, verbose_name='テスト項目完了数')),
                ('businessCategory', models.ForeignKey(blank=True, default='', null=True, on_delete=django.db.models.deletion.PROTECT, to='commons.businesscategory', verbose_name='業務区分')),
                ('functionalCategory', models.ForeignKey(blank=True, default='', null=True, on_delete=django.db.models.deletion.PROTECT, to='commons.functionalcategory', verbose_name='機能区分')),
                ('owner', models.ForeignKey(blank=True, default='', null=True, on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL, verbose_name='担当者')),
                ('status', models.ForeignKey(blank=True, default='', null=True, on_delete=django.db.models.deletion.PROTECT, to='commons.status', verbose_name='ステータス')),
                ('subSystemCategory', models.ForeignKey(blank=True, default='', null=True, on_delete=django.db.models.deletion.PROTECT, to='commons.subsystemcategory', verbose_name='サブシステム区分')),
                ('subTeam', models.ForeignKey(blank=True, default='', null=True, on_delete=django.db.models.deletion.PROTECT, to='commons.subteam', verbose_name='サブチーム')),
                ('team', models.ForeignKey(blank=True, default='', null=True, on_delete=django.db.models.deletion.PROTECT, to='commons.team', verbose_name='チーム')),
                ('testType', models.ForeignKey(blank=True, default='', null=True, on_delete=django.db.models.deletion.PROTECT, to='commons.testtype', verbose_name='テスト工程')),
            ],
            options={
                'verbose_name': 'Scenario',
                'verbose_name_plural': 'Scenario',
            },
        ),
        migrations.CreateModel(
            name='Risk',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='', max_length=100, verbose_name='題名')),
                ('version', models.CharField(blank=True, default='', max_length=100, null=True, verbose_name='対象バージョン')),
                ('planStartDate', models.DateField(blank=True, null=True, verbose_name='予定開始日')),
                ('planEndDate', models.DateField(blank=True, null=True, verbose_name='予定終了日')),
                ('actualStartDate', models.DateField(blank=True, null=True, verbose_name='実績開始日')),
                ('actualEndDate', models.DateField(blank=True, null=True, verbose_name='実績終了日')),
                ('estimate', models.FloatField(blank=True, default=0, null=True, verbose_name='予定工数')),
                ('remainingWorkTime', models.FloatField(blank=True, default=0, null=True, verbose_name='残作業時間(h)')),
                ('createDate', models.DateField(blank=True, null=True, verbose_name='起票日')),
                ('contents', models.TextField(blank=True, null=True, verbose_name='内容')),
                ('shareToClient', models.BooleanField(verbose_name='クライアント共有')),
                ('dueDate', models.DateField(blank=True, null=True, verbose_name='対応期限')),
                ('planReviewDate', models.DateField(blank=True, null=True, verbose_name='次回レビュー日')),
                ('riskExtinctionPlanDate', models.DateField(blank=True, null=True, verbose_name='リスク消滅予定日')),
                ('completionCriteria', models.TextField(blank=True, null=True, verbose_name='リスク消滅基準')),
                ('costImpactOfRisk', models.TextField(blank=True, null=True, verbose_name='リスクによるコスト影響')),
                ('costs', models.FloatField(blank=True, default=0, null=True, verbose_name='リスク対応に必要なコスト')),
                ('contingencyPlan', models.TextField(blank=True, null=True, verbose_name='リスク発現時のコンティンジェンシープラン')),
                ('riskManifestationDate', models.DateField(blank=True, null=True, verbose_name='リスク顕在化日')),
                ('riskExtinctionDate', models.DateField(blank=True, null=True, verbose_name='リスク消滅日')),
                ('occurrenceProbability', models.CharField(choices=[('1', 'Low'), ('2', 'High'), ('3', 'Normal')], default='', max_length=10, verbose_name='発生確率')),
                ('impact', models.CharField(choices=[('1', 'Low'), ('2', 'High'), ('3', 'Normal')], default='', max_length=10, verbose_name='影響度')),
                ('solution', models.TextField(blank=True, null=True, verbose_name='対応方針／状況')),
                ('delayDescription', models.TextField(blank=True, null=True, verbose_name='遅延理由詳細')),
                ('creater', models.ForeignKey(blank=True, default='', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='risk_creater', to=settings.AUTH_USER_MODEL, verbose_name='起票者')),
                ('delayReason', models.ForeignKey(blank=True, default='', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='risk_delayReason', to='commons.delayreason', verbose_name='遅延理由区分')),
                ('impactScope', models.ForeignKey(blank=True, default='', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='risk_impactScope', to='commons.impactscope', verbose_name='影響範囲')),
                ('occurredPhase', models.ForeignKey(blank=True, default='', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='risk_occurredPhase', to='commons.phase', verbose_name='発生工程（課題・リスク）')),
                ('owner', models.ForeignKey(blank=True, default='', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='risk_owner', to=settings.AUTH_USER_MODEL, verbose_name='担当者')),
                ('riskIssueCategory', models.ForeignKey(blank=True, default='', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='riskCategory', to='commons.riskissuecategory', verbose_name='分類（課題・リスク）')),
                ('riskResponseType', models.ForeignKey(blank=True, default='', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='risk_ResponseType', to='commons.riskresponsetype', verbose_name='リスク対応タイプ')),
                ('riskScope', models.ForeignKey(blank=True, default='', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='risk_Scope', to='commons.riskscope', verbose_name='リスク種別')),
                ('solvePhase_Plan', models.ForeignKey(blank=True, default='', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='risk_solvePhase_Plan', to='commons.phase', verbose_name='解決予定工程（課題・リスク）')),
                ('status', models.ForeignKey(blank=True, default='', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='risk_status', to='commons.status', verbose_name='ステータス')),
                ('subTeam', models.ForeignKey(blank=True, default='', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='risk_subteam', to='commons.subteam', verbose_name='サブチーム')),
                ('team', models.ForeignKey(blank=True, default='', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='risk_team', to='commons.team', verbose_name='チーム')),
            ],
            options={
                'verbose_name': 'Risk',
                'verbose_name_plural': 'Risk',
            },
        ),
        migrations.CreateModel(
            name='Parent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='', max_length=100, verbose_name='題名')),
                ('description', models.TextField(blank=True, null=True, verbose_name='説明')),
                ('version', models.CharField(default='', max_length=100, verbose_name='対象バージョン')),
                ('planStartDate', models.DateField(blank=True, null=True, verbose_name='予定開始日')),
                ('planEndDate', models.DateField(blank=True, null=True, verbose_name='予定終了日')),
                ('actualStartDate', models.DateField(blank=True, null=True, verbose_name='実績開始日')),
                ('actualEndDate', models.DateField(blank=True, null=True, verbose_name='実績終了日')),
                ('owner', models.ForeignKey(blank=True, default='', null=True, on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL, verbose_name='担当者')),
                ('status', models.ForeignKey(blank=True, default='', null=True, on_delete=django.db.models.deletion.PROTECT, to='commons.status', verbose_name='ステータス')),
            ],
            options={
                'verbose_name': 'Parent',
                'verbose_name_plural': 'Parent',
            },
        ),
        migrations.CreateModel(
            name='Deliverables',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='', max_length=100, verbose_name='題名')),
                ('description', models.TextField(blank=True, null=True, verbose_name='説明')),
                ('version', models.CharField(blank=True, default='', max_length=100, null=True, verbose_name='対象バージョン')),
                ('parentTracker', models.CharField(blank=True, default='', max_length=100, null=True, verbose_name='親チケット')),
                ('deliverablesId', models.CharField(blank=True, default='', max_length=100, null=True, verbose_name='成果物ID')),
                ('deliverablesName', models.CharField(blank=True, default='', max_length=100, null=True, verbose_name='成果物名称')),
                ('delayDescription', models.TextField(blank=True, null=True, verbose_name='遅延理由詳細')),
                ('timeStamp', models.DateTimeField(auto_now_add=True, verbose_name='Record Time Stamp')),
                ('delayReason', models.ForeignKey(blank=True, default='', null=True, on_delete=django.db.models.deletion.PROTECT, to='commons.delayreason', verbose_name='遅延理由区分')),
                ('owner', models.ForeignKey(blank=True, default='', null=True, on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL, verbose_name='担当者')),
                ('parent', models.ForeignKey(blank=True, default='', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='parent', to='pms.parent', verbose_name='parent')),
                ('reviewAssign', models.ForeignKey(blank=True, default='', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='deliverablesReviewOwner', to=settings.AUTH_USER_MODEL, verbose_name='レビュー担当者')),
                ('status', models.ForeignKey(blank=True, default='', null=True, on_delete=django.db.models.deletion.PROTECT, to='commons.status', verbose_name='ステータス')),
                ('subTeam', models.ForeignKey(blank=True, default='', null=True, on_delete=django.db.models.deletion.PROTECT, to='commons.subteam', verbose_name='サブチーム')),
                ('system_user', models.ForeignKey(blank=True, default='', editable=False, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='user', to=settings.AUTH_USER_MODEL, verbose_name='user')),
                ('team', models.ForeignKey(blank=True, default='', null=True, on_delete=django.db.models.deletion.PROTECT, to='commons.team', verbose_name='チーム')),
            ],
            options={
                'verbose_name': 'Deliverables',
                'verbose_name_plural': 'Deliverables',
            },
        ),
        migrations.CreateModel(
            name='Bac',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='', max_length=100, verbose_name='題名')),
                ('description', models.TextField(blank=True, null=True, verbose_name='説明')),
                ('version', models.CharField(blank=True, default='', max_length=100, null=True, verbose_name='対象バージョン')),
                ('parentTracker', models.CharField(blank=True, default='', max_length=100, null=True, verbose_name='親チケット')),
                ('initialEstimate', models.FloatField(blank=True, default=0, null=True, verbose_name='初期見積(h)')),
                ('remainingEstimate', models.FloatField(blank=True, default=0, null=True, verbose_name='残余見積(h)')),
                ('bacCategory', models.ForeignKey(blank=True, default='', null=True, on_delete=django.db.models.deletion.PROTECT, to='commons.baccategory', verbose_name='BAC種別')),
                ('status', models.ForeignKey(blank=True, default='', null=True, on_delete=django.db.models.deletion.PROTECT, to='commons.status', verbose_name='ステータス')),
                ('team', models.ForeignKey(blank=True, default='', null=True, on_delete=django.db.models.deletion.PROTECT, to='commons.team', verbose_name='チーム')),
            ],
            options={
                'verbose_name': 'BAC',
                'verbose_name_plural': 'BAC',
            },
        ),
    ]
